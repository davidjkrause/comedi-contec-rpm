From a8e6ff9b646d7b6bb1f694fde65c52969b559939 Mon Sep 17 00:00:00 2001
From: David Krause <david.krause@gmail.com>
Date: Fri, 10 Feb 2017 11:41:59 -0600
Subject: [PATCH] Add contec_fit driver to comedi

- Add contec_fit.c driver source
- Modify Kbuild and Makefile.am to build contec_fit
- TEMP: Update comedi version
---
 comedi/drivers/Kbuild       |   1 +
 comedi/drivers/Makefile.am  |   2 +
 comedi/drivers/contec_fit.c | 320 ++++++++++++++++++++++++++++++++++++++++++++
 configure.ac                |   2 +-
 4 files changed, 324 insertions(+), 1 deletion(-)
 create mode 100644 comedi/drivers/contec_fit.c

diff --git a/comedi/drivers/Kbuild b/comedi/drivers/Kbuild
index f737897..59e5d06 100644
--- a/comedi/drivers/Kbuild
+++ b/comedi/drivers/Kbuild
@@ -47,6 +47,7 @@ obj-$(COMEDI_CONFIG_PCI_MODULES) += cb_pcidio.o
 obj-$(COMEDI_CONFIG_PCI_MODULES) += cb_pcimdas.o
 obj-$(COMEDI_CONFIG_PCI_MODULES) += cb_pcimdda.o
 obj-$(COMEDI_CONFIG_PCI_MODULES) += contec_pci_dio.o
+obj-$(COMEDI_CONFIG_PCI_MODULES) += contec_fit.o
 obj-$(COMEDI_CONFIG_PCI_MODULES) += daqboard2000.o
 obj-$(COMEDI_CONFIG_PCI_MODULES) += dt3000.o
 obj-$(COMEDI_CONFIG_PCI_MODULES) += gsc_hpdi.o
diff --git a/comedi/drivers/Makefile.am b/comedi/drivers/Makefile.am
index 161fe12..b140045 100644
--- a/comedi/drivers/Makefile.am
+++ b/comedi/drivers/Makefile.am
@@ -126,6 +126,7 @@ pci_modules2= \
  cb_pcimdas.ko \
  cb_pcimdda.ko \
  contec_pci_dio.ko \
+ contec_fit.ko \
  daqboard2000.ko \
  dt3000.ko \
  gsc_hpdi.ko \
@@ -291,6 +292,7 @@ cb_das16_cs_ko_SOURCES = cb_das16_cs.c
 comedi_bond_ko_SOURCES = comedi_bond.c
 comedi_fc_ko_SOURCES = comedi_fc.c
 contec_pci_dio_ko_SOURCES = contec_pci_dio.c
+contec_fit_ko_SOURCES = contec_fit.c
 daqboard2000_ko_SOURCES = daqboard2000.c
 das08_ko_SOURCES = das08.c
 das08_cs_ko_SOURCES = das08_cs.c
diff --git a/comedi/drivers/contec_fit.c b/comedi/drivers/contec_fit.c
new file mode 100644
index 0000000..5b11472
--- /dev/null
+++ b/comedi/drivers/contec_fit.c
@@ -0,0 +1,320 @@
+/*
+    comedi/drivers/contec_pci_dio.c
+
+    COMEDI - Linux Control and Measurement Device Interface
+    Copyright (C) 2000 David A. Schleef <ds@schleef.org>
+
+    This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; either version 2 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program; if not, write to the Free Software
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+
+*/
+/*
+Driver: contec_pci_dio
+Description: Contec PIO1616L digital I/O board
+Devices: [Contec] PIO1616L (contec_pci_dio)
+Author: Stefano Rivoir <s.rivoir@gts.it>
+Updated: Wed, 27 Jun 2007 13:00:06 +0100
+Status: works
+
+Configuration Options:
+  [0] - PCI bus of device (optional)
+  [1] - PCI slot of device (optional)
+  If bus/slot is not specified, the first supported
+  PCI device found will be used.
+*/
+
+#include <linux/comedidev.h>
+
+#include "comedi_pci.h"
+
+typedef enum contec_model {
+	PIO1616L = 0,
+} contec_model;
+
+typedef struct contec_board {
+	const char *name;
+	int model;
+	int in_ports;
+	int out_ports;
+	int in_offs;
+	int out_offs;
+	int out_boffs;
+} contec_board;
+static const contec_board contec_boards[] = {
+		{"PIO1616L", PIO1616L, 8, 0, 0, 0, 0},
+};
+
+#define PCI_DEVICE_ID_PIO1616L 0x8172
+static DEFINE_PCI_DEVICE_TABLE(contec_pci_table) = {
+	{PCI_VENDOR_ID_CONTEC, PCI_DEVICE_ID_PIO1616L, PCI_ANY_ID, PCI_ANY_ID,
+		0, 0, PIO1616L},
+	{0}
+};
+
+MODULE_DEVICE_TABLE(pci, contec_pci_table);
+
+#define thisboard ((const contec_board *)dev->board_ptr)
+
+typedef struct {
+	int data;
+
+	struct pci_dev *pci_dev;
+
+} contec_private;
+
+#define devpriv ((contec_private *)dev->private)
+
+static int contec_attach(comedi_device * dev, comedi_devconfig * it);
+static int contec_detach(comedi_device * dev);
+static comedi_driver driver_contec = {
+      driver_name:"contec_fit",
+      module:THIS_MODULE,
+      attach:contec_attach,
+      detach:contec_detach,
+};
+
+/* Classic digital IO */
+static int contec_ai_insn_read(comedi_device * dev, comedi_subdevice * s,
+	comedi_insn * insn, lsampl_t * data);
+static int contec_ao_insn_write(comedi_device * dev, comedi_subdevice * s,
+	comedi_insn * insn, lsampl_t * data);
+static int contec_di_insn_bits(comedi_device * dev, comedi_subdevice * s,
+	comedi_insn * insn, lsampl_t * data);
+static int contec_do_insn_bits(comedi_device * dev, comedi_subdevice * s,
+	comedi_insn * insn, lsampl_t * data);
+
+#if 0
+static int contec_cmdtest(comedi_device * dev, comedi_subdevice * s,
+	comedi_cmd * cmd);
+
+static int contec_ns_to_timer(unsigned int *ns, int round);
+#endif
+
+static int contec_attach(comedi_device * dev, comedi_devconfig * it)
+{
+	struct pci_dev *pcidev;
+	comedi_subdevice *s;
+	int deviceid, device_address;
+
+	printk("comedi%d: DJK contec: ", dev->minor);
+
+	if (alloc_private(dev, sizeof(contec_private)) < 0)
+		return -ENOMEM;
+
+	for(deviceid = 0; deviceid < 8; deviceid++){
+		device_address = 0x0800 + (0x1000 * deviceid);
+		if(((inb(device_address + 0x00) & 0xf0) == it->options[0]) && 
+		(inb(device_address + 0x01) == it->options[1])){
+			if(it->options[1] == 0x01){
+				if (alloc_subdevices(dev, 1) < 0)
+					return -ENOMEM;
+				dev->board_name = "DAI12-4(FIT)GY";
+				dev->iobase = device_address;
+
+				dev->board_ptr = contec_boards + 0;
+
+				s = dev->subdevices + 0;
+
+				s->type = COMEDI_SUBD_AO;
+				s->subdev_flags = SDF_WRITEABLE;
+				s->n_chan = 4;
+				s->maxdata = 4095;
+				s->range_table = &range_bipolar10;
+				s->insn_write = contec_ao_insn_write;
+			}else if(it->options[1] == 0x02){
+				if (alloc_subdevices(dev, 1) < 0)
+					return -ENOMEM;
+				dev->board_name = "ADI16-4(FIT)GY";
+				dev->iobase = device_address;
+
+				dev->board_ptr = contec_boards + 0;
+
+				s = dev->subdevices + 0;
+
+				s->type = COMEDI_SUBD_AI;
+				s->subdev_flags = SDF_READABLE;
+				s->n_chan = 4;
+				s->maxdata = 65535;
+				s->range_table = &range_bipolar10;
+				s->insn_read = contec_ai_insn_read;
+			}else if(it->options[1] == 0x00){
+				if (alloc_subdevices(dev, 2) < 0)
+					return -ENOMEM;
+				dev->board_name = "DIO-8/8(FIT)GY";
+				dev->iobase = device_address;
+
+				dev->board_ptr = contec_boards + 0;
+
+				s = dev->subdevices + 0;
+
+				s->type = COMEDI_SUBD_DI;
+				s->subdev_flags = SDF_READABLE;
+				s->n_chan = 8;
+				s->maxdata = 1;
+				s->range_table = &range_digital;
+				s->insn_bits = contec_di_insn_bits;
+
+				s = dev->subdevices + 1;
+
+				s->type = COMEDI_SUBD_DO;
+				s->subdev_flags = SDF_WRITEABLE;
+				s->n_chan = 8;
+				s->maxdata = 1;
+				s->range_table = &range_digital;
+				s->insn_bits = contec_do_insn_bits;
+			}else{
+				continue;
+			}
+
+			printk("attached\n");
+
+			return 1;
+		}
+	}
+
+	printk("card not present!\n");
+
+	return -EIO;
+}
+
+static int contec_detach(comedi_device * dev)
+{
+	printk("comedi%d: contec: remove\n", dev->minor);
+
+	return 0;
+}
+
+#if 0
+static int contec_cmdtest(comedi_device * dev, comedi_subdevice * s,
+	comedi_cmd * cmd)
+{
+	printk("contec_cmdtest called\n");
+	return 0;
+}
+
+static int contec_ns_to_timer(unsigned int *ns, int round)
+{
+	return *ns;
+}
+#endif
+
+static int contec_ai_insn_read(comedi_device * dev, comedi_subdevice * s,
+	comedi_insn * insn, lsampl_t * data)
+{
+	int lcount;
+	int i;
+	int channel;
+
+	printk("contec_ai_insn_read called\n");
+
+	channel = CR_CHAN(insn->chanspec);
+	if (channel > 3)
+		return -EINVAL;
+
+	outb(0x00, dev->iobase + 0x18);
+	outb(0x03, dev->iobase + 0x18);
+	outb(0x00, dev->iobase + 0x1C);
+
+	for(i = 0; i < insn->n; i++){
+		outb(channel, dev->iobase + 0x12);
+		lcount = 0;
+		while((inb(dev->iobase + 0x16) & 0x01) == 0){
+			lcount++;
+			if(lcount > 50000){
+				break;
+			}
+		}
+		if(lcount > 50000){
+			return -EIO;
+		}
+
+		data[i] = inb(dev->iobase + 0x10) + (inb(dev->iobase + 0x11) << 8);
+	}
+
+	return i;
+}
+
+static int contec_ao_insn_write(comedi_device * dev, comedi_subdevice * s,
+	comedi_insn * insn, lsampl_t * data)
+{
+	int lcount;
+	int i;
+	printk("contec_ao_insn_write called\n");
+
+	if (insn->n != 8)
+		return -EINVAL;
+	outb(0x00, dev->iobase + 0x18);
+	outb(0x02, dev->iobase + 0x18);
+	outb(0x00, dev->iobase + 0x1C);
+	outb(0x03, dev->iobase + 0x18);
+	outb(0x00, dev->iobase + 0x1C);	
+	
+	for(i = 0; i < 4; i++){
+		lcount = 0;
+		while((inb(dev->iobase + 0x16) & 0x01) == 0x01){
+			lcount++;
+			if(lcount > 50000){
+				return 2;
+			}
+		}
+		outb(i, dev->iobase + 0x12);
+		outb(data[i * 2], dev->iobase + 0x10);
+		outb(data[i * 2 + 1], dev->iobase + 0x11);
+		lcount = 0;
+		while((inb(dev->iobase + 0x16) & 0x02) != 0x02){
+			lcount++;
+			if(lcount > 50000){
+				break;
+			}
+		}
+		outb(0x02, dev->iobase + 0x16);
+	}
+
+	return 2;
+}
+
+static int contec_do_insn_bits(comedi_device * dev, comedi_subdevice * s,
+	comedi_insn * insn, lsampl_t * data)
+{
+
+	printk("contec_do_insn_bits called\n");
+
+	if (insn->n != 2)
+		return -EINVAL;
+
+	if (data[0]){
+		s->state = data[0];
+		rt_printk("  out: %d on %lx\n", s->state,
+			dev->iobase + 0x02);
+		outw(s->state, dev->iobase + 0x14);
+	}
+	data[1] = s->state;
+	return 2;
+}
+
+static int contec_di_insn_bits(comedi_device * dev, comedi_subdevice * s,
+	comedi_insn * insn, lsampl_t * data)
+{
+
+	rt_printk("contec_di_insn_bits called\n");
+
+	if (insn->n != 2)
+		return -EINVAL;
+
+	data[1] = inw(dev->iobase + 0x10);
+
+	return 2;
+}
+
+COMEDI_PCI_INITCLEANUP(driver_contec, contec_pci_table);
diff --git a/configure.ac b/configure.ac
index d830ee9..e90eee4 100644
--- a/configure.ac
+++ b/configure.ac
@@ -4,7 +4,7 @@ AC_PREREQ(2.53)
 dnl For second parameter of AC_INIT, use [$major.$minor.$micro] for releases,
 dnl otherwise [$major.$minor.$micro.$nano], where $nano is 1 for Git,
 dnl $nano is >= 2 for prereleases.
-AC_INIT([Comedi],[0.7.76.1],[comedi_list@googlegroups.com],[comedi],
+AC_INIT([Comedi],[0.7.76.1-dtx],[comedi_list@googlegroups.com],[comedi],
 	[http://www.comedi.org/])
 AC_CONFIG_SRCDIR([comedi/comedi_fops.c])
 AC_CONFIG_HEADERS(config.h)
-- 
1.8.3.1

